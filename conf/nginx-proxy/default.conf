server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    ssl_certificate /etc/nginx/certs/444.crt;
    ssl_certificate_key /etc/nginx/certs/444.key;
    return 444;
}

server {

    server_name $SITE;
    listen 80;
    listen [::]:80;

    return 301 https://$host$request_uri;
}

server {

    server_name $SITE;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/nginx/certs/site.crt;
    ssl_certificate_key /etc/nginx/certs/site.key;
    # ssl_client_certificate /etc/nginx/client_certs/ca.crt;
    # ssl_verify_depth 2;
    # ssl_verify_client optional;

    include /etc/nginx/hardening.d/*.conf;

    resolver 127.0.0.11;

    location / {

      # if ($ssl_client_verify != 'SUCCESS') {
      #  return 403;
      # }

      proxy_pass $ENDPOINT;
      proxy_set_header Host      $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_connect_timeout 300;
      proxy_read_timeout 300;
      proxy_send_timeout 300;
      proxy_intercept_errors off;

      proxy_buffers 32 4m;
      proxy_busy_buffers_size 25m;
      proxy_buffer_size 512k;

      proxy_ignore_headers "Cache-Control" "Expires";
      proxy_max_temp_file_size 0;
      client_max_body_size 100m;
      client_body_buffer_size 4m;
    }

}
