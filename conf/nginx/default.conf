server {
    listen 80 default_server;
    listen [::]:80 default_server;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    root /var/www/html;

    ssl_certificate /etc/nginx/certs/site.crt;
    ssl_certificate_key /etc/nginx/certs/site.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    ssl_dhparam /etc/nginx/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # CSS (ngx_http_headers_module is required)
    add_header X-Frame-Options SAMEORIGIN;

    # replace with the IP address of your resolver
    resolver 127.0.0.11;
    
    if ($env != 'PROD') {
      set $auth_basic "Restricted Content";
    }
    if ($env = 'PROD') {
      set $auth_basic off;
    }

    auth_basic $auth_basic;
    auth_basic_user_file /etc/nginx/.htpasswd;
    
    access_log  /var/log/nginx/$host.access.log;
    error_log  /var/log/nginx/$host.error.log;
    
    location / {
      index index.php index.html index.htm;
      try_files $uri $uri/ /index.php?q=$uri&$args;
    }

    location ~ /readme.html {
      deny all;
    }

    location ^~ /xmlrpc.php {
      return 404;
    }

    location ~ \.php$ {
      allow 5.153.253.152; # enCircle Gateway

      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass $fpm_host:9000;
      fastcgi_param SCRIPT_FILENAME $request_filename;
      fastcgi_intercept_errors on;
      fastcgi_index index.php;
      include fastcgi_params;
    }

    location ~ /\.(git|gitignore|ht) {
      deny all;
    }

    location ~ xmlrpc.php { deny all; }
    location ^wp\-content/uploads/(.*).php(.?) { deny all; }
    set $susquery 0;

    location /wp-comments-post.php {
      limit_except POST { deny all; }

      if ($http_user_agent ~ "^$") { return 403; }

      valid_referers server_names jetpack.wordpress.com/jetpack-comment/;

      if ($invalid_referer) { return 403; }
    }

}
