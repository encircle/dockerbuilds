v1.0.12
=======
ISSUES
------
#5589 -> 444 on default nginx server
#5888 -> .htpass permissions
#5887 -> container logs are world readable
#5886 -> block /license.txt
#5884 -> NGINX and PHP versions not hidden in server headers
#5883 -> Certificate chain incomplete on letsencrypt certs
#5841 -> Audit of docker fs permissions

DETAILS
-------
- CHANGELOG.txt added
- PHP version hidden
   -> expose_php.ini added to wordpress image with expose_php = off
- NGINX version hidden
   -> server_token = off; added to nginx.conf
- Server names not matching any server_name blocks now blocked with 444 response
   -> New server block added for port 443, this is now the default_server
- Site and fpm_host variables now replaced using envsubst rather than perl module
   -> New procedure added to NGINX entrypoint to run envsubst against nginx.conf
- NGINX log permissions made stricter
   -> New procedure added to NGINX entrypoint to chmod 700 log files
- wp-config.php permissions made stricter
   -> Added line to wordpress permissions.sh script to chmod 400 wp-config.php
- File cleanup

v1.0.13
=======
- Wordpress version updated to 5.4.2

v1.0.14
=======
- External SMTP server configuration added to wordpress image
   -> postfix.ini file added
- Postfix image added

v1.0.15
=======
- New alpine MariaDB image added (runs older version of Mariadb 10.4.13)
- Drupal image added
- Links replaced by networking added to docker-compose examples
- Postfix network added to docker-compose examples
- Wordpress permissions runs on start now
- Modsecurity changed from DetectionOnly to On
- Mosecurity debug log level changed to 0 and output to stderr
- Permissions script now runs once a day rather than hourly
- Domain restrictions removed from postfix configuration
- Added option to whitelist IP addresses for basic auth in .env file

v1.0.16
=======
- Added environment variable for modsecurity engine mode to webserver
- Added whitelist file to modsecurity configuration to webserver

v1.0.17
=======
- Changed wp command utility owner from root:root to root:www-data in wordpress image
- Extra hardening measures added to webserver build
   -> block_ext.conf
   -> block_non_english_chars.conf
   -> block_http_ref.conf
   -> block_files.txt
   -> block_req_methods.conf
   -> block_suspicious_query.conf
   -> custom_error.conf
   -> civicrm.conf
   -> headers.conf
   -> wordpress.conf
   -> ssl.conf
   -> error.html
   -> block_user_agents.conf
- Pre-build config reorg for webserver directory

v1.0.18
=======
- Added server_names_hash_bucket_size to nginx.conf
- Added referer_hash_bucket_size to default.conf

v1.0.19
=======
- changed permissions for wflogs dir - wordfence plugin

v1.0.20
=======
- Added Drupal image
- Added Memcache image (for drupal)
- Added DISABLE_CONF environment variable to nginx-modsec

v1.0.21
======
- Added upgrade steps to upgrade all packages in images on build (excluding those that must be fixed for a specific image, e.g. mariadb)

v1.0.22
=======
- ClamAV integration
- CVE-2020-10543 resolved in nginx-modsec
- CVE-2020-12723 resolved in nginx-modsec
- CVE-2020-13790 resolved in nginx-modsec

v1.1.0
======
- postfix updated to alpine 3.12
- memcache updated to alpine 3.12
- mariadb-alpine updated to alpine 3.12
- update script added to Drupal, so Drupal is upgraded at runtime if image is newer version
- CVE-2020-14422 vulnebility resolved in postfix
- Removed letsencrypt from nginx image, better served via a seperate certbot container
- Renamed Drupal image to drupal7 and added drupal8
- Removed expose port in restingclam image as comms now via unix socket
- Removed permissions.sh execution from wordpress image build
- Added NGINX proxy image
- CVE-2020-14344 resolved in wordpress
- CVE-2020-13902 resolved in wordpress
- CVE-2020-3350 resolved in restingclam
- CVE-2020-3481 resolved in restingclam

v1.1.1
======
- Wordpress updated to v5.5
- CVE-2019-15847 resolved in nginx-modsec and nginx-proxy

v1.1.2
======
- Removed client authentication from nginx proxy, only used internally for antivirus over VLAN
- CVE-2020-14363 resolved in wordpress
- CVE-2020-24659 resolved in wordpress
- CVE-2020-14350 resolved in drupal7 and drupal8
- CVE-2020-14349 resolved in drupal7 and drupal8
- Updated MD5 hash for composer download in drupal8
- Resolved maximum recursion depth issue in mariadb configuration
- Wordpress upgraded to 5.5.1
- PHP intl extension added to drupal7, drupal8 and wordpress

v1.1.3
======
- Rebuilds only, no code changes
- CVE-2020-8177 resolved in all Alpine based images
- CVE-2020-8169 resolved in all Alpine based images
- CVE-2020-24977 resolved in all Alpine based images
- Restingclam updated to log requesting IP address to identify to which server the virus was uploaded to
- Added script to add/renew letsencrypt certs via fleeting certbot container

v1.2.0
======
- NGINX log format brought in line with IICSA
- Modsec OWASP ruleset updated from 3.0.2 to 3.3.0
- Modsec OWASP rule exclusions enabled for Wordpress, Drupal etc.
- CVE-2020-8927 resolved in wordpress
- CVE-2020-8927 resolved in drupal7
- CVE-2020-24977 resolved in drupal8
- CVE-2020-8177 resolved in drupal8
- CVE-2020-8169 resolved in drupal8
- CVE-2020-8927 resolved in drupal8

v1.2.1 (latest)
======
- Readded include directive for /etc/mysql/conf.d for mariadb image
- Added include directive for /etc/mysql/encircle.d for overrides
- Added error-logging.ini file to drupal images to replicate wordpress settings
