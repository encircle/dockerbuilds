v1.0.12
=======
ISSUES
------
#5589 -> 444 on default nginx server
#5888 -> .htpass permissions
#5887 -> container logs are world readable
#5886 -> block /license.txt
#5884 -> NGINX and PHP versions not hidden in server headers
#5883 -> Certificate chain incomplete on letsencrypt certs
#5841 -> Audit of docker fs permissions

DETAILS
-------
- CHANGELOG.txt added
- PHP version hidden
   -> expose_php.ini added to wordpress image with expose_php = off
- NGINX version hidden
   -> server_token = off; added to nginx.conf
- Server names not matching any server_name blocks now blocked with 444 response
   -> New server block added for port 443, this is now the default_server
- Site and fpm_host variables now replaced using envsubst rather than perl module
   -> New procedure added to NGINX entrypoint to run envsubst against nginx.conf
- NGINX log permissions made stricter
   -> New procedure added to NGINX entrypoint to chmod 700 log files
- wp-config.php permissions made stricter
   -> Added line to wordpress permissions.sh script to chmod 400 wp-config.php
- File cleanup

v1.0.13
=======
- Wordpress version updated to 5.4.2

v1.0.14
=======
- External SMTP server configuration added to wordpress image
   -> postfix.ini file added
- Postfix image added

v1.0.15
=======
- New alpine MariaDB image added (runs older version of Mariadb 10.4.13)
- Drupal image added
- Links replaced by networking added to docker-compose examples
- Postfix network added to docker-compose examples
- Wordpress permissions runs on start now
- Modsecurity changed from DetectionOnly to On
- Mosecurity debug log level changed to 0 and output to stderr
- Permissions script now runs once a day rather than hourly
- Domain restrictions removed from postfix configuration
- Added option to whitelist IP addresses for basic auth in .env file

v1.0.16
=======
- Added environment variable for modsecurity engine mode to webserver
- Added whitelist file to modsecurity configuration to webserver

v1.0.17
=======
- Changed wp command utility owner from root:root to root:www-data in wordpress image
- Extra hardening measures added to webserver build
   -> block_ext.conf
   -> block_non_english_chars.conf
   -> block_http_ref.conf
   -> block_files.txt
   -> block_req_methods.conf
   -> block_suspicious_query.conf
   -> custom_error.conf
   -> civicrm.conf
   -> headers.conf
   -> wordpress.conf
   -> ssl.conf
   -> error.html
   -> block_user_agents.conf
- Pre-build config reorg for webserver directory

v1.0.18
=======
- Added server_names_hash_bucket_size to nginx.conf
- Added referer_hash_bucket_size to default.conf

v1.0.19
=======
- changed permissions for wflogs dir - wordfence plugin

v1.0.20
=======
- Added Drupal image
- Added Memcache image (for drupal)
- Added DISABLE_CONF environment variable to nginx-modsec

v1.0.21
======
- Added upgrade steps to upgrade all packages in images on build (excluding those that must be fixed for a specific image, e.g. mariadb)

v1.0.22
=======
- ClamAV integration
- CVE-2020-10543 resolved in nginx-modsec
- CVE-2020-12723 resolved in nginx-modsec
- CVE-2020-13790 resolved in nginx-modsec

v1.1.0
======
- postfix updated to alpine 3.12
- memcache updated to alpine 3.12
- mariadb-alpine updated to alpine 3.12
- update script added to Drupal, so Drupal is upgraded at runtime if image is newer version
- CVE-2020-14422 vulnebility resolved in postfix
- Removed letsencrypt from nginx image, better served via a seperate certbot container
- Renamed Drupal image to drupal7 and added drupal8
- Removed expose port in restingclam image as comms now via unix socket
- Removed permissions.sh execution from wordpress image build
- Added NGINX proxy image
- CVE-2020-14344 resolved in wordpress
- CVE-2020-13902 resolved in wordpress
- CVE-2020-3350 resolved in restingclam
- CVE-2020-3481 resolved in restingclam

v1.1.1
======
- Wordpress updated to v5.5
- CVE-2019-15847 resolved in nginx-modsec and nginx-proxy

v1.1.2
======
- Removed client authentication from nginx proxy, only used internally for antivirus over VLAN
- CVE-2020-14363 resolved in wordpress
- CVE-2020-24659 resolved in wordpress
- CVE-2020-14350 resolved in drupal7 and drupal8
- CVE-2020-14349 resolved in drupal7 and drupal8
- Updated MD5 hash for composer download in drupal8
- Resolved maximum recursion depth issue in mariadb configuration
- Wordpress upgraded to 5.5.1
- PHP intl extension added to drupal7, drupal8 and wordpress

v1.1.3
======
- Rebuilds only, no code changes
- CVE-2020-8177 resolved in all Alpine based images
- CVE-2020-8169 resolved in all Alpine based images
- CVE-2020-24977 resolved in all Alpine based images
- Restingclam updated to log requesting IP address to identify to which server the virus was uploaded to
- Added script to add/renew letsencrypt certs via fleeting certbot container

v1.2.0
======
- NGINX log format brought in line with IICSA
- Modsec OWASP ruleset updated from 3.0.2 to 3.3.0
- Modsec OWASP rule exclusions enabled for Wordpress, Drupal etc.
- CVE-2020-8927 resolved in wordpress
- CVE-2020-8927 resolved in drupal7
- CVE-2020-24977 resolved in drupal8
- CVE-2020-8177 resolved in drupal8
- CVE-2020-8169 resolved in drupal8
- CVE-2020-8927 resolved in drupal8

v1.2.1
======
- Readded include directive for /etc/mysql/conf.d for mariadb image
- Added include directive for /etc/mysql/encircle.d for overrides
- Added error-logging.ini file to drupal images to replicate wordpress settings
- Removed settings from my.cnf to be overriden in mariadb image
- Drupal8 updated from 8.9.2 to 8.9.6 resolving multiple vulnerabilities (CVE-2020-136(66/67/68/69/70))
- Added drupal.conf hardening to NGINX modsec image
- Added git, bash, nano to drupal images

v1.2.2
======
- Rebuild only, no code changes
- Fixed CVE-2020-15999 in nginx-modsec, wordpress, drupal7, drupal8, nginx-proxy

v1.2.3
======
- Upgraded Wordpress from 5.5.1 to 5.5.3

v1.2.4
======
- Upgraded Drupal7 to 7.74

v1.2.5
======
- Upgraded Drupal7 to 7.75
- Upgraded Drupal8 to 8.9.10

v1.2.6
======
- Added official nginx-proxy image
- Added ENDPOINT variable to nginx-modsec entrypoiny envsubst for nginx-proxy endpoint

v1.2.7
======
- Rebuild only, no code changes

v1.2.8
======
- Wordpress/Drupal postfix.ini modified to send sender address as noreply@${SITE}
- Wordpress/Drupal entrypoint updated to substitute ${SITE} variable in postfix.ini
- Change BREAKS email for previous versions, you MUST now add the SITE environment variable to wordpress/drupal containers
- Wordpress updated to 5.6.0
- Critical vulnerability CVE-2020-29599 resolved in wordpress

v1.3.0
======
- General file/directory cleanup
- Readme updates
- letsencrypt script updated
- Added cleanup script
- Wordpress now comes pre-installed (for new installations)
- Added image for Wordpress with CiviCRM
- Drupal7 upgraded to 7.78
- Drupal8 upgraded to 8.9.13

v1.3.1
======
- Disabled SQL strict mode in MariaDB
- Added Sendgrid support to Potfix image
- Fixed bug where .well-known is blocked, but .well-known/acme-challenge is explicitly allowed

v1.3.2
======
- Added script for local vulnerability scanning
- Added custom redmine image
- Changed drush permissions to root:10013 (www-data) with 750 permissions in drupal7

v1.3.3
======
- Removed sql_mode= from mariadb config
- Added innodb_strict_mode=0 to mariadb config
- Major Wordpress release to 5.7

v1.3.4
======
- Added gnu-libiconv library for Azure single sign-on
- Added bcmath to drupal7, drupal8 and wordpress builds

v1.3.5
======
- Added PHP soap extension to wordpress and drupal images

v1.4.0
======
- Removed dependency on official Wordpress image (which was over-complex)
- General cleanup of images and entrypoints
- Drupal7 and Drupal8 now self-install on start
- Wordpress minor version update to 5.7.1
- NGINX cloudflare IPV4 addresses now self-update on build
- NGINX logs access/error to stdout now too

v1.4.1
======
- Updated drupal 7 to 7.80
- Updated drupal 8 to 8.9.14

v1.4.2
======
- Permissions now set in background in Wordpress/Drupal
- Rebuild only, no code changes

v1.4.3
======
- Added Drupal9 image
- Added SSH image
- Cleaned up examples
- Updated virus scanning script in NGINX
- Removed restingclam image, now in seperate repo
- Added patch for Redmine attachment model to enable virus scanning
- Updated Drupal to 8.9.16
- Removed additional permissions script run (on upgrade) from Drupals

v1.4.4
======
- Increased max_input_vars for Drupals
- Added memory_limit and error_logging config to wordpress
- Updated SSH container so that user can sudo
- Upgraded Wordpress from 5.7.1 to 5.7.2

v1.4.5
======
- Added WORDPRESS_CONFIG_EXTRA environment variable for extra wp-config config
- Change body limit to 100mb in nginx, php and modsecurity

v1.4.6
======
- Various SSH image developments
- Upgraded Drupal 9 to 9.2.0
- CVE-2021-33560 found in NGINX by Trivy
- Added permissions scripts to SSH image
- Reference full qualified path to entrypoint in wordpress

v1.4.7
======
- Added nano to SSH image
- Fixed SFTP access to SSH image
- Updated Drupal from 7.80 to 7.82
- Updated Drupal from 9.20 to 9.2.2
- Updated Drupal 8 to 8.9.17

v1.5.0
======
- Added composer to SSH image
- Added php xml extension to SSH image
- Variablized webroot in nginx-modsec so that it can be customized
- Set error.html permissions explicitly in nginx-modsec image
- Drupal9 now proper composer install
- Bootstrap SSH to existing image to bring across all tooling
- Added hook for bootstrapping of SSH to images
- Major repository layout reorganization
- Wordpress 5.7.2 to 5.8.0
- Druapal 9.2.2 to 9.2.4
- Drupal 8.9.17 to 8.9.18

v1.5.1
======
- Added basic auth to NGINX proxy default.conf
=======

v1.5.2
======
- Added Redis PHP extension to Drupal 9 image
- Update to specific Drupal core version using composer in Drupal 9
- Drupal 9.2.4 to 9.2.6 - security update

v1.5.3
======
WP 5.8.0 to 5.8.1

v1.5.4
======
- Added basic auth directive to php location block
- Only present NGINX custom errors for 5xx codes

v1.6.0
======
- Added vim to ssh image/s
- Drupal9 image cleanup
- Updated composer md5 in drupal8/9
- Added patch to Drupal9 image
- Updated Drupal9 from 9.2.6 to 9.2.7
- Updated vuln scan script so that it only scans for unfixed vulns
- Changed NGINX fastcgi pass so full address can be specified (tcp or unix)
- Removed superfluous environment variables from Drupal 9 image

v1.6.1 (latest)
======
- Removed XDEBUG from Drupal 9
- Added php_mysqli to Drupal 9
- Made packages persistent again in Drupal 9
